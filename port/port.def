/* Port definition */

////LAYOUT:
////PERIPHERALS: SERIAL0 SERIAL1 SERIAL2 SERIAL3 SERIAL4 SERIAL5 SPI0 SPI1 SPI2 SPI3 SPI4 I2C0 I2C1 I2C2 I2C3 ADC0 PWMD0
////CDEFINES: XMC4700_F144x2048 XMC_ETH_PHY_KSZ8081RNB

const PinInfo const _vhalpinmap[] STORED = {
    /* Arduino Compatible Connector (ROW 1) */
    /* D0   */ MAKE_PIN(PC, 15, HAS_EXT | HAS_PWM),
    /* D1   */ MAKE_PIN(PC, 14, HAS_EXT),
    /* D2   */ MAKE_PIN(PB,  0, HAS_EXT | HAS_PWM),
    /* D3   */ MAKE_PIN(PB, 1, HAS_EXT | HAS_PWM),
    /* D4   */ MAKE_PIN(PB, 8, HAS_EXT),
    /* D5   */ MAKE_PIN(PC, 12, HAS_EXT | HAS_PWM),
    /* D6   */ MAKE_PIN(PC, 11, HAS_EXT | HAS_PWM),
    /* D7   */ MAKE_PIN(PB, 9, HAS_EXT),

    /* D8   */ MAKE_PIN(PB, 10, HAS_EXT),
    /* D9   */ MAKE_PIN(PB, 11, HAS_EXT | HAS_PWM),
    /* D10  */ MAKE_PIN(PD, 10, HAS_EXT | HAS_PWM),
    /* D11  */ MAKE_PIN(PD, 8, HAS_EXT | HAS_PWM),
    /* D12  */ MAKE_PIN(PD, 7, HAS_EXT | HAS_PWM),
    /* D13  */ MAKE_PIN(PD, 9, HAS_EXT | HAS_PWM),
    /* D14  */ MAKE_PIN(PD, 15, HAS_EXT),
    /* D15  */ MAKE_PIN(PA, 13, HAS_EXT | HAS_PWM),


    /* X1 (right-to-left) */
    /* D16   */ MAKE_PIN(PD,  4, HAS_EXT | HAS_PWM),
    /* D17   */ MAKE_PIN(PA, 11, HAS_EXT),
    /* D18   */ MAKE_PIN(PA,  5, HAS_EXT | HAS_PWM),
    /* D19   */ MAKE_PIN(PA,  6, HAS_EXT),
    /* D20   */ MAKE_PIN(PA,  3, HAS_EXT),
    /* D21   */ MAKE_PIN(PA,  4, HAS_EXT),
    /* D22   */ MAKE_PIN(PA,  1, HAS_EXT | HAS_PWM),
    /* D23   */ MAKE_PIN(PA,  2, HAS_EXT),
    /* D24   */ MAKE_PIN(PA, 10, HAS_EXT),
    /* D25   */ MAKE_PIN(PA,  0, HAS_EXT),

    /* D26   */ MAKE_PIN(PD,  2, HAS_EXT),
    /* D27   */ MAKE_PIN(PA,  9, HAS_EXT),
    /* D28   */ MAKE_PIN(PD,  1, HAS_EXT),
    /* D29   */ MAKE_PIN(PD,  0, HAS_EXT | HAS_PWM),

    /* D30   */ MAKE_PIN(PC, 13, HAS_EXT),
    /* D31   */ MAKE_PIN(PB, 14, HAS_EXT),
    /* D32   */ MAKE_PIN(PF, 10, HAS_EXT),
    /* D33   */ MAKE_PIN(PF, 11, HAS_EXT | HAS_PWM),

    /* X2 (right-to-left) */
    /* D34   */ MAKE_PIN(PD, 13, HAS_EXT | HAS_PWM),
    /* D35   */ MAKE_PIN(PD, 12, HAS_EXT | HAS_PWM),
    /* D36   */ MAKE_PIN(PD, 11, HAS_EXT | HAS_PWM),
    /* D37   */ MAKE_PIN(PA, 12, HAS_EXT | HAS_PWM),
    /* D38   */ MAKE_PIN(PA, 14, HAS_EXT | HAS_PWM),
    /* D39   */ MAKE_PIN(PA, 15, HAS_EXT | HAS_PWM),
    /* D40   */ MAKE_PIN(PD, 14, HAS_EXT),
    /* D41   */ MAKE_PIN(PD,  3, HAS_EXT | HAS_PWM),
    /* D42   */ MAKE_PIN(PA,  7, HAS_EXT),
    /* D43   */ MAKE_PIN(PA,  8, HAS_EXT),

    /* D44   */ MAKE_PIN(PB,  2, HAS_EXT | HAS_PWM),
    /* D45   */ MAKE_PIN(PG,  0, HAS_EXT),
    /* D46   */ MAKE_PIN(PG,  1, HAS_EXT),
    /* D47   */ MAKE_PIN(PG,  2, HAS_EXT | HAS_PWM),
    /* D48   */ MAKE_PIN(PG,  3, HAS_EXT | HAS_PWM),
    /* D49   */ MAKE_PIN(PG,  4, HAS_EXT | HAS_PWM),
    /* D50   */ MAKE_PIN(PG,  5, HAS_EXT | HAS_PWM),
    /* D51   */ MAKE_PIN(PG,  6, HAS_EXT),
    /* D52   */ MAKE_PIN(PB, 15, HAS_EXT | HAS_PWM),
    /* D53   */ MAKE_PIN(PF,  0, HAS_EXT | HAS_PWM),

    /* D54   */ MAKE_PIN(PF,  1, HAS_EXT),
    /* D55   */ MAKE_PIN(PF,  2, HAS_EXT),
    /* D56   */ MAKE_PIN(PF,  3, HAS_EXT | HAS_PWM),
    /* D57   */ MAKE_PIN(PF,  4, HAS_EXT),
    /* D58   */ MAKE_PIN(PF,  5, HAS_EXT),
    /* D59   */ MAKE_PIN(PF,  6, HAS_EXT),
    /* D60   */ MAKE_PIN(PF,  7, HAS_EXT),
    /* D61   */ MAKE_PIN(PC,  6, HAS_EXT),

    /* Internal pins */
    /* D62   */ MAKE_PIN(PB,  4, HAS_EXT | HAS_PWM),
    /* D63   */ MAKE_PIN(PB,  5, HAS_EXT),

    /* D64   */ MAKE_PIN(PL, 12, HAS_EXT),
    /* D65   */ MAKE_PIN(PL, 13, HAS_EXT),

    /* D66   */ MAKE_PIN(PF,  9, HAS_EXT),
    /* D67   */ MAKE_PIN(PF,  8, HAS_EXT),

    /* Analog */
    /* A0   */ MAKE_PIN(PK, 0,  HAS_EXT | HAS_ADC),
    /* A1   */ MAKE_PIN(PK, 1,  HAS_EXT | HAS_ADC),
    /* A2   */ MAKE_PIN(PK, 2,  HAS_EXT | HAS_ADC),
    /* A3   */ MAKE_PIN(PK, 3,  HAS_EXT | HAS_ADC),
    /* A4   */ MAKE_PIN(PK, 4,  HAS_EXT | HAS_ADC),
    /* A5   */ MAKE_PIN(PK, 5,  HAS_EXT | HAS_ADC),

    /* A6   */ MAKE_PIN(PL,  6, HAS_EXT),
    /* A7   */ MAKE_PIN(PL,  7, HAS_EXT),
    /* A8   */ MAKE_PIN(PL,  5, HAS_EXT),
    /* A9   */ MAKE_PIN(PL,  4, HAS_EXT),
    /* A10  */ MAKE_PIN(PL,  3, HAS_EXT),
    /* A11  */ MAKE_PIN(PL,  2, HAS_EXT),

    /* A12  */ MAKE_PIN(PK, 15, HAS_EXT),
    /* A13  */ MAKE_PIN(PK, 14, HAS_EXT),
    /* A14  */ MAKE_PIN(PK, 13, HAS_EXT),
    /* A15  */ MAKE_PIN(PK, 12, HAS_EXT),
    /* A16  */ MAKE_PIN(PK,  7, HAS_EXT),
    /* A17  */ MAKE_PIN(PK,  6, HAS_EXT),
    /* A18  */ MAKE_PIN(PL, 15, HAS_EXT),
    /* A19  */ MAKE_PIN(PL, 14, HAS_EXT),
    /* A20  */ MAKE_PIN(PK,  9, HAS_EXT),
    /* A21  */ MAKE_PIN(PK,  8, HAS_EXT),

    /* CAN (unused) */
    /* D90  */ MAKE_PIN(PB, 12, HAS_EXT),
    /* D91  */ MAKE_PIN(PB, 13, HAS_EXT),
};

const PinClass const _analogclass[] STORED = {
    /* A0  */ MAKE_PIN_CLASS(68, 0, 0, 0),
    /* A1  */ MAKE_PIN_CLASS(69, 1, 0, 0),
    /* A2  */ MAKE_PIN_CLASS(70, 2, 0, 0),
    /* A3  */ MAKE_PIN_CLASS(71, 3, 0, 0),
    /* A4  */ MAKE_PIN_CLASS(72, 4, 0, 0),
    /* A5  */ MAKE_PIN_CLASS(73, 5, 0, 0),

    /* A6  */ MAKE_PIN_CLASS(74, 6, 2, 0),
    /* A7  */ MAKE_PIN_CLASS(75, 7, 2, 0),
    /* A8  */ MAKE_PIN_CLASS(76, 5, 2, 0),
    /* A9  */ MAKE_PIN_CLASS(77, 4, 2, 0),
    /* A10 */ MAKE_PIN_CLASS(78, 3, 2, 0),
    /* A11 */ MAKE_PIN_CLASS(79, 2, 2, 0),

    /* A12 */ MAKE_PIN_CLASS(80, 7, 1, 0),
    /* A13 */ MAKE_PIN_CLASS(81, 6, 1, 0),
    /* A14 */ MAKE_PIN_CLASS(82, 5, 1, 0),
    /* A15 */ MAKE_PIN_CLASS(83, 4, 1, 0),
    /* A16 */ MAKE_PIN_CLASS(84, 7, 0, 0),
    /* A17 */ MAKE_PIN_CLASS(85, 6, 0, 0),
    /* A18 */ MAKE_PIN_CLASS(86, 7, 3, 0),
    /* A19 */ MAKE_PIN_CLASS(87, 6, 3, 0),
    /* A20 */ MAKE_PIN_CLASS(88, 1, 1, 0),
    /* A21 */ MAKE_PIN_CLASS(89, 0, 1, 0),
};

const PinClass const _spiclass[] STORED = {
    /* pin_num, spi, tx=alt.fn <or> rx=DXn, DX.<CHAR> (for rx pins) */

    /* USIC1 CH0 */
    /* MOSI0 */ MAKE_PIN_CLASS(18, 0, 2, 0),
    /* MISO0 */ MAKE_PIN_CLASS(21, 0, 0, 0),
    /* SCLK0 */ MAKE_PIN_CLASS(17, 0, 2, 0),

    /* USIC0 CH1 */
    /* MOSI1 */ MAKE_PIN_CLASS(49, 1, 2, 0),
    /* MISO1 */ MAKE_PIN_CLASS(48, 1, 0, 2),
    /* SCLK1 */ MAKE_PIN_CLASS(47, 1, 2, 0),

    /* USIC1 CH1 */
    /* MOSI2 */ MAKE_PIN_CLASS(22, 2, 2, 0),
    /* MISO2 */ MAKE_PIN_CLASS(25, 2, 0, 3),
    /* SCLK2 */ MAKE_PIN_CLASS(24, 2, 2, 0),

    /* USIC2 CH0 */
    /* MOSI3 */ MAKE_PIN_CLASS(11, 3, 1, 0),
    /* MISO3 */ MAKE_PIN_CLASS(12, 3, 0, 2),
    /* SCLK3 */ MAKE_PIN_CLASS(13, 3, 1, 0),

    /* USIC2 CH1 */
    /* MOSI4 */ MAKE_PIN_CLASS(36, 4, 1, 0),
    /* MISO4 */ MAKE_PIN_CLASS(35, 4, 0, 3),
    /* SCLK4 */ MAKE_PIN_CLASS(34, 4, 1, 0),
};

const PinClass const _i2cclass[] STORED = {
    /* pin_num, i2c, alt.fn, DXn{A=0, B=1, ...}   */

    /* USIC1 CH0 */
    /* SDA0 */ MAKE_PIN_CLASS(18, 0, 2, 1),
    /* SCL0 */ MAKE_PIN_CLASS(17, 0, 2, 0),

    /* USIC1 CH1 */
    /* SDA1 */ MAKE_PIN_CLASS(14, 1, 2, 0),
    /* SCL1 */ MAKE_PIN_CLASS(15, 1, 2, 1),

    /* USIC2 CH0 */
    /* SDA2 */ MAKE_PIN_CLASS(53, 2, 1, 1),
    /* SCL2 */ MAKE_PIN_CLASS(55, 2, 1, 0),

    /* USIC0 CH1 */
    /* SDA3 */ MAKE_PIN_CLASS(34, 3, 2, 3),
    /* SCL3 */ MAKE_PIN_CLASS(47, 3, 2, 2),
};

const PinClass const _pwmclass[] STORED = {
    //phys, timer (0-->UCC40, 1-->UCC41, ..., 4-->UCC80), channel, afio
    /* PWM0  */ MAKE_PIN_CLASS(0,  4, 1, 3),
    /* PWM1  */ MAKE_PIN_CLASS(2,  0, 3, 3),
    /* PWM2  */ MAKE_PIN_CLASS(3,  0, 2, 3),
    /* PWM3  */ MAKE_PIN_CLASS(5,  5, 3, 3),
    /* PWM4  */ MAKE_PIN_CLASS(6,  4, 2, 3),
    /* PWM5  */ MAKE_PIN_CLASS(9,  5, 1, 3),
    /* PWM6  */ MAKE_PIN_CLASS(10, 1, 0, 3),
    /* PWM7  */ MAKE_PIN_CLASS(11, 2, 3, 3),
    /* PWM8  */ MAKE_PIN_CLASS(12, 1, 3, 3),
    /* PWM9  */ MAKE_PIN_CLASS(13, 1, 1, 3),
    /* PWM10 */ MAKE_PIN_CLASS(15, 0, 2, 3),
    /* PWM11 */ MAKE_PIN_CLASS(16, 2, 2, 3),
    /* PWM12 */ MAKE_PIN_CLASS(18, 4, 0, 3),
    /* PWM13 */ MAKE_PIN_CLASS(22, 4, 1, 3),
    /* PWM14 */ MAKE_PIN_CLASS(29, 2, 0, 3),
    /* PWM15 */ MAKE_PIN_CLASS(33, 4, 0, 3),
    /* PWM16 */ MAKE_PIN_CLASS(34, 2, 1, 3),
    /* PWM17 */ MAKE_PIN_CLASS(35, 2, 2, 3),
    /* PWM18 */ MAKE_PIN_CLASS(36, 2, 3, 3),
    /* PWM19 */ MAKE_PIN_CLASS(37, 0, 3, 3),
    /* PWM20 */ MAKE_PIN_CLASS(38, 0, 1, 3),
    /* PWM21 */ MAKE_PIN_CLASS(39, 0, 0, 3),
    /* PWM22 */ MAKE_PIN_CLASS(41, 2, 3, 3),
    /* PWM23 */ MAKE_PIN_CLASS(44, 0, 1, 3),
    /* PWM24 */ MAKE_PIN_CLASS(47, 3, 3, 3),
    /* PWM25 */ MAKE_PIN_CLASS(48, 3, 2, 3),
    /* PWM26 */ MAKE_PIN_CLASS(49, 3, 1, 3),
    /* PWM27 */ MAKE_PIN_CLASS(50, 3, 0, 3),
    /* PWM28 */ MAKE_PIN_CLASS(52, 5, 0, 3),
    /* PWM29 */ MAKE_PIN_CLASS(53, 5, 3, 3),
    /* PWM30 */ MAKE_PIN_CLASS(56, 5, 2, 3),
    /* PWM31 */ MAKE_PIN_CLASS(62, 4, 3, 3),
};


const PinClass const _icuclass[] STORED = {
};

const PinClass const _canclass[] STORED = {
};

const PinClass const _serclass[] STORED = {
    /* pin_num, usart, tx=alt.fn | rx=gpio mode, dxN (rx only) */
    /* Note: usart is USIC*2+CHANNEL      */

    /* RX0 */ MAKE_PIN_CLASS(62, 0, 0, 1),
    /* TX0 */ MAKE_PIN_CLASS(63, 0, 2, 0),

    /* RX1 */ MAKE_PIN_CLASS(48, 1, 0, 2),
    /* TX1 */ MAKE_PIN_CLASS(49, 1, 2, 0),

    /* RX2 */ MAKE_PIN_CLASS(0,  2, 0, 2),
    /* TX2 */ MAKE_PIN_CLASS(1,  2, 2, 0),

    /* RX3 */ MAKE_PIN_CLASS(25, 3, 0, 3),
    /* TX3 */ MAKE_PIN_CLASS(22, 3, 2, 0),

    /* RX4 */ MAKE_PIN_CLASS(12, 4, 0, 2),
    /* TX4 */ MAKE_PIN_CLASS(11, 4, 1, 0),

    /* RX5 */ MAKE_PIN_CLASS(35, 5, 0, 3),
    /* TX5 */ MAKE_PIN_CLASS(36, 5, 1, 0),
};

const PinClass const _dacclass[] STORED = {
};

const PinClass const _ledclass[] STORED = {
    /* LED0 */ MAKE_PIN_CLASS(66, 0, 0, 0),
    /* LED1 */ MAKE_PIN_CLASS(67, 0, 0, 0),
};

const PinClass const _btnclass[] STORED = {
    /* BTN0 */ MAKE_PIN_CLASS(65, 0, 0, 0),
    /* BTN1 */ MAKE_PIN_CLASS(64, 0, 0, 0),
};
